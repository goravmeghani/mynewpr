{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///E:/UniWork/FYP/Implementation/thirtyPercent/frontendd/lib/mongodb.js"],"sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nconst uri = process.env.MONGODB_URI;\r\nconst options = {};\r\n\r\nlet client;\r\nlet clientPromise;\r\n\r\nif (!uri) {\r\n  throw new Error(\"Please add your MongoDB URI to .env.local\");\r\n}\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  if (!global._mongoClientPromise) {\r\n    client = new MongoClient(uri, options);\r\n    global._mongoClientPromise = client.connect();\r\n  }\r\n  clientPromise = global._mongoClientPromise;\r\n} else {\r\n  client = new MongoClient(uri, options);\r\n  clientPromise = client.connect();\r\n}\r\n\r\nexport default clientPromise;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,KAAK;IACR,MAAM,IAAI,MAAM;AAClB;AAEA,wCAA4C;IAC1C,IAAI,CAAC,OAAO,mBAAmB,EAAE;QAC/B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,OAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,OAAO,mBAAmB;AAC5C,OAAO;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///E:/UniWork/FYP/Implementation/thirtyPercent/frontendd/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport GitHubProvider from \"next-auth/providers/github\";\r\nimport GoogleProvider from \"next-auth/providers/google\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport { MongoDBAdapter } from \"@auth/mongodb-adapter\";\r\nimport clientPromise from \"@/lib/mongodb\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport const authoptions = NextAuth({\r\n  adapter: MongoDBAdapter(clientPromise),\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: \"Credentials\",\r\n      credentials: {\r\n        email: { label: \"Email\", type: \"email\" },\r\n        password: { label: \"Password\", type: \"password\" },\r\n      },\r\n      async authorize(credentials) {\r\n        const client = await clientPromise;\r\n        const db = client.db();\r\n        const user = await db.collection(\"users\").findOne({ email: credentials.email });\r\n\r\n        if (!user) {\r\n          throw new Error(\"No user found with this email\");\r\n        }\r\n\r\n        const isValid = await bcrypt.compare(credentials.password, user.password);\r\n        if (!isValid) {\r\n          throw new Error(\"Invalid password\");\r\n        }\r\n\r\n        return { id: user._id.toString(), email: user.email, name: user.username };\r\n      },\r\n    }),\r\n    GitHubProvider({\r\n      clientId: process.env.GITHUB_ID,\r\n      clientSecret: process.env.GITHUB_SECRET,\r\n    }),\r\n    GoogleProvider({\r\n      clientId: process.env.GOOGLE_ID,\r\n      clientSecret: process.env.GOOGLE_SECRET,\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async signIn({ user, account, profile }) {\r\n      if (account.provider === \"github\" || account.provider === \"google\") {\r\n        const client = await clientPromise;\r\n        const db = client.db();\r\n        const existingUser = await db.collection(\"users\").findOne({ email: user.email });\r\n\r\n        if (!existingUser) {\r\n          await db.collection(\"users\").insertOne({\r\n            email: user.email,\r\n            username: user.email.split(\"@\")[0],\r\n            createdAt: new Date(),\r\n          });\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.id = user.id;\r\n        token.email = user.email;\r\n        token.name = user.name || user.email.split(\"@\")[0];\r\n      }\r\n      return token;\r\n    },\r\n    async session({ session, token }) {\r\n      if (token) {\r\n        session.user.id = token.id;\r\n        session.user.email = token.email;\r\n        session.user.name = token.name;\r\n      }\r\n      return session;\r\n    },\r\n  },\r\n  session: {\r\n    strategy: \"jwt\",\r\n  },\r\n  secret: process.env.NEXTAUTH_SECRET,\r\n});\r\n\r\nexport { authoptions as GET, authoptions as POST };"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEO,MAAM,cAAc,CAAA,GAAA,mPAAA,CAAA,UAAQ,AAAD,EAAE;IAClC,SAAS,CAAA,GAAA,yPAAA,CAAA,iBAAc,AAAD,EAAE,gHAAA,CAAA,UAAa;IACrC,WAAW;QACT,CAAA,GAAA,sQAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,MAAM,SAAS,MAAM,gHAAA,CAAA,UAAa;gBAClC,MAAM,KAAK,OAAO,EAAE;gBACpB,MAAM,OAAO,MAAM,GAAG,UAAU,CAAC,SAAS,OAAO,CAAC;oBAAE,OAAO,YAAY,KAAK;gBAAC;gBAE7E,IAAI,CAAC,MAAM;oBACT,MAAM,IAAI,MAAM;gBAClB;gBAEA,MAAM,UAAU,MAAM,wLAAA,CAAA,UAAM,CAAC,OAAO,CAAC,YAAY,QAAQ,EAAE,KAAK,QAAQ;gBACxE,IAAI,CAAC,SAAS;oBACZ,MAAM,IAAI,MAAM;gBAClB;gBAEA,OAAO;oBAAE,IAAI,KAAK,GAAG,CAAC,QAAQ;oBAAI,OAAO,KAAK,KAAK;oBAAE,MAAM,KAAK,QAAQ;gBAAC;YAC3E;QACF;QACA,CAAA,GAAA,iQAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QACzC;QACA,CAAA,GAAA,iQAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QACzC;KACD;IACD,WAAW;QACT,MAAM,QAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;YACrC,IAAI,QAAQ,QAAQ,KAAK,YAAY,QAAQ,QAAQ,KAAK,UAAU;gBAClE,MAAM,SAAS,MAAM,gHAAA,CAAA,UAAa;gBAClC,MAAM,KAAK,OAAO,EAAE;gBACpB,MAAM,eAAe,MAAM,GAAG,UAAU,CAAC,SAAS,OAAO,CAAC;oBAAE,OAAO,KAAK,KAAK;gBAAC;gBAE9E,IAAI,CAAC,cAAc;oBACjB,MAAM,GAAG,UAAU,CAAC,SAAS,SAAS,CAAC;wBACrC,OAAO,KAAK,KAAK;wBACjB,UAAU,KAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;wBAClC,WAAW,IAAI;oBACjB;gBACF;YACF;YACA,OAAO;QACT;QACA,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,KAAK,GAAG,KAAK,KAAK;gBACxB,MAAM,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YACpD;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO;gBACT,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;gBAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;gBAChC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAChC;YACA,OAAO;QACT;IACF;IACA,SAAS;QACP,UAAU;IACZ;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC","debugId":null}}]
}